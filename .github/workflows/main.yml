name: Preprocessing Pipeline
  
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
  MLFLOW_EXPERIMENT_NAME: Clothes Price CI

jobs:
  build:
    runs-on: ubuntu-latest
 
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - name: Checkout Source Code
        uses: actions/checkout@v3
 
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: clothes-env
          environment-file: MLproject/conda.yaml
          auto-activate-base: false

       # Install mlflow
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy matplotlib seaborn scikit-learn 
          pip install mlflow dagshub joblib

      - name: Clear local MLflow cache (if any)
        run: rm -rf ~/.mlflow

      - name: Export MLflow Environment Variables
        run: |
          echo "MLFLOW_TRACKING_URI=${{ secrets.MLFLOW_TRACKING_URI }}" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_USERNAME=${{ secrets.MLFLOW_TRACKING_USERNAME }}" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_PASSWORD=${{ secrets.MLFLOW_TRACKING_PASSWORD }}" >> $GITHUB_ENV

      - name: Run mlflow project and Get latest MLflow run_id
        id: get_run_id # Mengubah ID agar lebih deskriptif
        run: |
          cd MLproject
          mlflow run . -P data_path=clothes_preprocessing.csv --env-manager=local | tee output.log
          RUN_ID=$(grep 'MLFLOW_RUN_ID=' output.log | cut -d'=' -f2)

          echo "run_id=$RUN_ID" >> "$GITHUB_OUTPUT"
          echo "Latest MLflow Run ID: $RUN_ID"

      - name: Commit and push processed files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        run: |
          git config --global user.name ${{ secrets.username }}
          git config --global user.email ${{ secrets.email }}
          git lfs install
          git lfs track "*.pkl"
          git add .gitattributes
          git add MLproject/model.pkl
          git commit -m "Add model"
          git push origin main
          
      - name: Upload trained model
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: MLproject/model.pkl

      - name: Upload MLflow logs
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-logs
          path: mlruns/

      - name: Get latest MLflow run_id
        run: |
          # RUN_ID=$(grep 'MLFLOW_RUN_ID=' output.log | cut -d'=' -f2)
          RUN_ID=$(ls -td mlruns/0/* | head -1 | xargs basename)
          echo "RUN_ID = $RUN_ID" >> $GITHUB_ENV
          echo "run_id = $RUN_ID" >> $GITHUB_OUTPUT

      - name: Build Docker Model
        run: |          
          echo "Using RUN_ID = $RUN_ID"
          mlflow models build-docker --model-uri "runs:/$RUN_ID/model" --name "clothes_price"
          
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build Docker image
        run: docker build -t farisgp/clothes_price:latest MLproject/
  
      - name: Push Docker image
        run: docker push farisgp/clothes_price:latest
