name: Preprocessing Pipeline
 
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
 
jobs:
  build:
    runs-on: ubuntu-latest
 
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3
 
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: clothes-env
          environment-file: MLproject/conda.yaml
          auto-activate-base: false
      
      # Check Env Variables
      - name: Check Env
        run: |
          echo $CSV_URL
          echo "DAGSHUB_USERNAME is set: ${{ secrets.DAGSHUB_USERNAME != '' }}"
          echo "DAGSHUB_TOKEN is set: ${{ secrets.DAGSHUB_TOKEN != '' }}"
 
      # Install mlflow
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy matplotlib seaborn scikit-learn 
          pip install mlflow dagshub joblib

      - name: Export MLflow Environment Variables
        run: |
          echo "MLFLOW_TRACKING_URI=${{ vars.MLFLOW_TRACKING_URI }}" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_USERNAME=${{ secrets.DAGSHUB_USERNAME }}" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_PASSWORD=${{ secrets.DAGSHUB_TOKEN }}" >> $GITHUB_ENV
        
      - name: Run mlflow project
        run: |
          cd MLproject
          # mlflow run . -P data_path=MLproject/clothes_price_prediction_preprocessing.csv --env-manager=local | tee output.log
          # RUN_ID=$(grep 'MLFLOW_RUN_ID=' output.log | cut -d'=' -f2)
          # echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          # echo "Latest run_id: $RUN_ID"
          MLFLOW_OUTPUT=$(mlflow run . -P data_path=clothes_price_prediction_preprocessing.csv --env-manager=local)
          echo "$MLFLOW_OUTPUT"
          RUN_ID=$(echo "$MLFLOW_OUTPUT" | grep -oP '(Run ID|MLflow Run ID): \K[a-f0-9]+' | tail -n 1)
          echo "Debug: Collected RUN_ID = $RUN_ID"
          echo "mlflow_run_id=$RUN_ID" >> $GITHUB_OUTPUT 
          echo "Latest run_id: $RUN_ID"
          
      - name: Upload trained model
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: models/model.pkl

      - name: Upload MLflow logs
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-logs
          path: MLproject/mlruns/

      - name: Build Docker Model
        run: |
          echo "Using RUN_ID=${{ steps.run_mlflow_project.outputs.RUN_ID }}"
          mlflow models build-docker --model-uri "runs:/$RUN_ID/model" --name "cc"
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ vars.DOCKER_PASSWORD }}
          
      - name: Build Docker image
        run: docker build -t farisgp/clothes_price:latest MLproject/
  
      - name: Push Docker image
        run: docker push farisgp/clothes_price:latest

      # - name: Commit and push processed files
      #   env:
      #     GH_TOKEN: ${{ secrets.GH_PAT }}  # Mengambil token dari GitHub Secrets
      #   run: |
      #     # git config user.name "farisgp"
      #     # git config user.email "farisghina51@gmail.com"
      #     # git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/farisgp/Eksperimen_SML_FarisGhina.git
      #     # git add preprocessing/clothes_price_prediction_preprocessing.csv
      #     # git commit -m "Update preprocessed dataset" || echo "No changes to commit"
      #     # git push origin main
      #     # git config --global user.name 'github-actions[bot]'
      #     # git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      #     # git add preprocessing/clothes_price_prediction_preprocessing
      #     # git commit -m "Add preprocessing output"
      #     # git push origin HEAD:${{ github.ref }}

      
